import proguard.gradle.ProGuardTask

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.guardsquare:proguard-gradle:7.1.0'
    }
}

plugins {
    id 'java'
}

group 'com.nridwan'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.yaml:snakeyaml:1.33'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'com.nridwan.Main'
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

def outputJar = "${buildDir}/libs/${rootProject.name}-${version}.jar"
def dependsDir = "${buildDir}/libs/dependencies/"

task copyDepends(type: Copy, dependsOn: jar) {
    from configurations.default
    into "${dependsDir}"
}

task release(type: ProGuardTask, dependsOn: copyDepends) {
    configuration 'proguard.conf'
    injars "${outputJar}"
    outjars "${buildDir}/libs/${rootProject.name}_proguard.jar"

    if (JavaVersion.current().isJava9Compatible()) {
        libraryjars(System.getProperty("java.home") + "/jmods")
    } else {
        libraryjars(System.getProperty("java.home") + "/lib/rt.jar")
    }
    libraryjars "${dependsDir}"
}
